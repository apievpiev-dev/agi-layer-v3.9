#!/usr/bin/env python3
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π AGI Layer v3.9
"""

import os
import sys
import subprocess
import time
from datetime import datetime

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    success, stdout, stderr = run_command("ps aux | grep advanced_telegram_bot | grep -v grep")
    if success and stdout.strip():
        print("üü¢ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
        for line in stdout.strip().split('\n'):
            if 'python' in line:
                parts = line.split()
                pid = parts[1]
                print(f"   PID: {pid}")
        return True
    else:
        print("üî¥ Telegram –±–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return False

def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫
    cmd = "source venv/bin/activate && nohup python advanced_telegram_bot.py > telegram_bot.log 2>&1 &"
    success, stdout, stderr = run_command(cmd)
    
    if success:
        time.sleep(3)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        if check_bot_status():
            print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞")
            show_logs()
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞: {stderr}")

def stop_bot():
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
    print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram –±–æ—Ç–∞...")
    success, stdout, stderr = run_command("pkill -f advanced_telegram_bot.py")
    
    time.sleep(2)
    if not check_bot_status():
        print("‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")

def restart_bot():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    stop_bot()
    time.sleep(2)
    start_bot()

def show_logs():
    """–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"""
    print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
    success, stdout, stderr = run_command("tail -20 telegram_bot.log")
    if success:
        print(stdout)
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ª–æ–≥–∏")

def test_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...")
    success, stdout, stderr = run_command("source venv/bin/activate && python test_telegram_system.py")
    if success:
        print(stdout)
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {stderr}")

def show_system_info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"""
    print("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ AGI Layer v3.9")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    # –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    check_bot_status()
    print()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    files_to_check = [
        '.env',
        'advanced_telegram_bot.py', 
        'telegram_bot.log',
        'models_status.txt'
    ]
    
    print("üìÅ –§–∞–π–ª—ã —Å–∏—Å—Ç–µ–º—ã:")
    for file in files_to_check:
        if os.path.exists(file):
            size = os.path.getsize(file)
            print(f"   ‚úÖ {file} ({size} –±–∞–π—Ç)")
        else:
            print(f"   ‚ùå {file} (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")
    
    print()
    
    # –ü–∞–ø–∫–∏
    dirs_to_check = ['models', 'output/images', 'logs', 'venv']
    print("üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    for dir in dirs_to_check:
        if os.path.exists(dir):
            print(f"   ‚úÖ {dir}/")
        else:
            print(f"   ‚ùå {dir}/ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)")

def main_menu():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    while True:
        print("\n" + "="*50)
        print("ü§ñ AGI Layer v3.9 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π")
        print("="*50)
        print("1. üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        print("2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
        print("3. ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞") 
        print("4. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
        print("5. üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏")
        print("6. üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É")
        print("7. ‚ùå –í—ã—Ö–æ–¥")
        print()
        
        try:
            choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-7): ").strip()
            
            if choice == '1':
                show_system_info()
            elif choice == '2':
                start_bot()
            elif choice == '3':
                stop_bot()
            elif choice == '4':
                restart_bot()
            elif choice == '5':
                show_logs()
            elif choice == '6':
                test_system()
            elif choice == '7':
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        # –ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        cmd = sys.argv[1].lower()
        
        if cmd == 'status':
            show_system_info()
        elif cmd == 'start':
            start_bot()
        elif cmd == 'stop':
            stop_bot()
        elif cmd == 'restart':
            restart_bot()
        elif cmd == 'logs':
            show_logs()
        elif cmd == 'test':
            test_system()
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: status, start, stop, restart, logs, test")
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        main_menu()

if __name__ == "__main__":
    main()