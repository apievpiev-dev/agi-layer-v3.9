#!/usr/bin/env python3
"""
AGI Layer v3.9 - –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –±–µ–∑ Docker
"""

import asyncio
import logging
import os
import sys
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('agi_layer_simple.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

def create_folders():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫"""
    folders = ['logs', 'models', 'output', 'output/images']
    for folder in folders:
        Path(folder).mkdir(parents=True, exist_ok=True)
        logger.info(f"‚úÖ –ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {folder}")

def check_env():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞"""
    if not Path('.env').exists():
        logger.warning("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    logger.info("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    return True

def show_system_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
    logger.info("üöÄ AGI Layer v3.9 - –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫")
    logger.info(f"üìç –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: {Path.cwd()}")
    logger.info(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    logger.info(f"üíª –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {sys.platform}")

async def start_simple_agent():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ AGI –∞–≥–µ–Ω—Ç–∞...")
    
    # –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞
    for i in range(5):
        await asyncio.sleep(1)
        logger.info(f"üîÑ –ê–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç... –¶–∏–∫–ª {i+1}/5")
    
    logger.info("‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∞–≥–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        show_system_info()
        create_folders()
        
        if not check_env():
            logger.warning("‚ö†Ô∏è –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
        
        # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
        await start_simple_agent()
        
        logger.info("üéâ AGI Layer v3.9 –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        logger.info("üìñ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        
    except KeyboardInterrupt:
        logger.info("üõë –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
