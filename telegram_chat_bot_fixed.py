#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π Telegram —á–∞—Ç-–±–æ—Ç –¥–ª—è AGI Layer v3.9
–†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ
"""

import asyncio
import logging
import json
from datetime import datetime
from typing import Dict, Any, Optional, List
import random

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ telegram –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
try:
    from telegram import Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup
    from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
    from telegram.constants import ParseMode
    TELEGRAM_AVAILABLE = True
except ImportError:
    TELEGRAM_AVAILABLE = False
    print("‚ö†Ô∏è python-telegram-bot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP API")

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ aiohttp
try:
    import aiohttp
    AIOHTTP_AVAILABLE = True
except ImportError:
    AIOHTTP_AVAILABLE = False
    print("‚ö†Ô∏è aiohttp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


class SimpleChatCoordinator:
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —á–∞—Ç–∞"""
    
    def __init__(self):
        self.chat_sessions: Dict[int, Dict[str, Any]] = {}
        self.demo_mode = True
        
    async def get_chat_session(self, chat_id: int) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞"""
        if chat_id not in self.chat_sessions:
            self.chat_sessions[chat_id] = {
                'history': [],
                'mode': 'chat',
                'context': {},
                'created_at': datetime.now(),
                'message_count': 0,
                'preferences': {
                    'language': 'ru',
                    'response_style': 'detailed',
                    'max_history': 20
                }
            }
        return self.chat_sessions[chat_id]
    
    async def process_text_message(self, chat_id: int, message: str, user_name: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å") -> str:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            session = await self.get_chat_session(chat_id)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
            session['history'].append({
                'role': 'user',
                'content': message,
                'user_name': user_name,
                'timestamp': datetime.now().isoformat()
            })
            session['message_count'] += 1
            
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
            response = await self._generate_smart_response(session, message)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
            session['history'].append({
                'role': 'assistant',
                'content': response,
                'timestamp': datetime.now().isoformat()
            })
            
            return response
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–µ: {e}")
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    
    async def _generate_smart_response(self, session: Dict[str, Any], message: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"""
        message_lower = message.lower()
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å', '—Ö–∞–π', 'hello']):
            responses = [
                "–ü—Ä–∏–≤–µ—Ç! –Ø AGI Layer v3.9 - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏! ü§ñ",
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥ –Ω–∞—à–µ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",
                "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è. –û —á–µ–º –ø–æ–≥–æ–≤–æ—Ä–∏–º?"
            ]
            return random.choice(responses)
        
        # –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
        elif any(keyword in message_lower for keyword in ['—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '—Ñ—É–Ω–∫—Ü–∏–∏', '—á—Ç–æ –º–æ–∂–µ—à—å', '–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç']):
            return """ü§ñ **–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ AGI Layer v3.9:**

üß† **–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥**
‚Ä¢ –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±—ã–º —Ç–µ–º–∞–º
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –±–µ—Å–µ–¥—É
‚Ä¢ –ü–æ–º–æ–≥–∞—é —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏ —Ä–µ—à–µ–Ω–∏–µ–º –∑–∞–¥–∞—á

üé® **–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏**
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ –ü–æ–º–æ—â—å —Å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏

üìö **–û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–±–æ—Ç–∞**
‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π
‚Ä¢ –ü–æ–º–æ—â—å —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏**
‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ –ü–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏–π –ø—Ä–æ–±–ª–µ–º
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º

–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å!"""
        
        # –í–æ–ø—Ä–æ—Å—ã –æ –º–∏—Å—Å–∏–∏
        elif any(keyword in message_lower for keyword in ['–º–∏—Å—Å–∏—è', '—Ü–µ–ª—å', '–∑–∞—á–µ–º', '–¥–ª—è —á–µ–≥–æ']):
            return """üéØ **–ú–æ—è –º–∏—Å—Å–∏—è:**

–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π:
‚Ä¢ **–ü–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º** —Ä–µ—à–∞—Ç—å –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–µ –∏ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏
‚Ä¢ **–û–±—É—á–∞–µ—Ç –∏ –æ–±—ä—è—Å–Ω—è–µ—Ç** —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º
‚Ä¢ **–¢–≤–æ—Ä–∏—Ç –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏** - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–¥–µ–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ **–≠–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è** - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä—É—Ç–∏–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã

üåü **–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å** - —Å–¥–µ–ª–∞—Ç—å –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞!

–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –¥–æ—Å—Ç–∏—á—å –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –±—ã—Å—Ç—Ä–µ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ."""
        
        # –í–æ–ø—Ä–æ—Å—ã –æ –ø–∞–º—è—Ç–∏
        elif any(keyword in message_lower for keyword in ['–ø–∞–º—è—Ç—å', '–ø–æ–º–Ω–∏—à—å', '–∑–∞–ø–æ–º–Ω–∏']):
            return f"""üß† **–û –º–æ–µ–π –ø–∞–º—è—Ç–∏:**

–î–∞, —É –º–µ–Ω—è –µ—Å—Ç—å –ø–∞–º—è—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –Ω–∞—à–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞!

üìä **–¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥:**
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {session['message_count']}
‚Ä¢ –ù–∞—á–∞—Ç: {session['created_at'].strftime('%H:%M')}
‚Ä¢ –†–µ–∂–∏–º: {session['mode']}

üíæ **–ß—Ç–æ —è –ø–æ–º–Ω—é:**
‚Ä¢ –í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –º–æ–∏ –æ—Ç–≤–µ—Ç—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ
‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –¥–ª—è –ª—É—á—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ –í–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —Ä–∞–º–∫–∞—Ö —Å–µ—Å—Å–∏–∏

üîÑ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
‚Ä¢ –ü–∞–º—è—Ç—å —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
‚Ä¢ –•—Ä–∞–Ω—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ {session['preferences']['max_history']} —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –ù–µ —Å–æ—Ö—Ä–∞–Ω—è—é –¥–∞–Ω–Ω—ã–µ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Ç–∞–º–∏

–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —á—Ç–æ-—Ç–æ –∑–∞–ø–æ–º–Ω–∏–ª –æ—Å–æ–±–µ–Ω–Ω–æ?"""
        
        # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
        elif any(keyword in message_lower for keyword in ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–∫–æ–¥', 'python', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', '–∞–ª–≥–æ—Ä–∏—Ç–º']):
            return """üíª **–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - –º–æ—è —Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞!**

–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:
‚Ä¢ **Python, JavaScript, C++** - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
‚Ä¢ **–ê–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏** - –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
‚Ä¢ **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π** - –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
‚Ä¢ **–û—Ç–ª–∞–¥–∫–æ–π** - –ø–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
‚Ä¢ **Machine Learning** - –º–æ–¥–µ–ª–∏, –æ–±—É—á–µ–Ω–∏–µ, –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ **Web —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π** - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∏ –±—ç–∫–µ–Ω–¥

üîß **–í AGI Layer –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è:**
üß† Phi-2 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
üé® Stable Diffusion –¥–ª—è UI/UX –º–∞–∫–µ—Ç–æ–≤
üëÅÔ∏è BLIP2 –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–≥—Ä–∞–º–º

–ö–∞–∫–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
        
        # –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã
        elif any(keyword in message_lower for keyword in ['—Å–æ–∑–¥–∞–π', '–ø—Ä–∏–¥—É–º–∞–π', '–Ω–∞–ø–∏—à–∏', '—Å–æ—á–∏–Ω–∏', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–∏–¥–µ—è']):
            return """üé® **–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ - —ç—Ç–æ –∑–¥–æ—Ä–æ–≤–æ!**

–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:
‚Ä¢ **–ì–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–¥–µ–π** - –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤, –±–∏–∑–Ω–µ—Å–∞, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞
‚Ä¢ **–ù–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–æ–≤** - —Å—Ç–∞—Ç—å–∏, —Ä–∞—Å—Å–∫–∞–∑—ã, —Å—Ü–µ–Ω–∞—Ä–∏–∏
‚Ä¢ **–°–æ–∑–¥–∞–Ω–∏–µ–º –∫–æ–Ω—Ü–µ–ø—Ü–∏–π** - –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –¥–∏–∑–∞–π–Ω–∞, —Ä–µ—à–µ–Ω–∏–π
‚Ä¢ **–ú–æ–∑–≥–æ–≤—ã–º —à—Ç—É—Ä–º–æ–º** - –ø–æ–∏—Å–∫ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤
‚Ä¢ **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–æ–≤** - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —ç—Ç–∞–ø—ã, —Ä–µ—Å—É—Ä—Å—ã

üé® **–î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:**
`/generate [–æ–ø–∏—Å–∞–Ω–∏–µ]` - —Å–æ–∑–¥–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é

‚ú® **–ü—Ä–∏–º–µ—Ä:**
`/generate –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º`

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å!"""
        
        # –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        else:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            if '?' in message:
                return f"""–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! ü§î

{message[:200]}{'...' if len(message) > 200 else ''}

–ü–æ–∑–≤–æ–ª—å—Ç–µ –ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —ç—Ç–∏–º. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.

üí° **–ú–æ–∏ –º—ã—Å–ª–∏:**
–≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–ø–µ–∫—Ç–æ–≤, –∏ —è –≥–æ—Ç–æ–≤ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –µ–≥–æ –ø–æ–¥—Ä–æ–±–Ω–æ. 

–•–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –º–æ–µ –º–Ω–µ–Ω–∏–µ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∞—Å–ø–µ–∫—Ç—É, –∏–ª–∏ –Ω—É–∂–µ–Ω –æ–±—â–∏–π –æ–±–∑–æ—Ä —Ç–µ–º—ã?"""
            
            else:
                responses = [
                    f"–ü–æ–Ω–∏–º–∞—é –≤–∞—à—É –º—ã—Å–ª—å! {message[:150]}{'...' if len(message) > 150 else ''} - –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è.",
                    f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≥–æ—Ç–æ–≤ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.",
                    f"–û—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–∞! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º —ç—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω.",
                    f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ! –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è —ç—Ç–æ–π –∏–¥–µ–∏."
                ]
                base_response = random.choice(responses)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                if any(word in message_lower for word in ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '–∫–æ–º–ø—å—é—Ç–µ—Ä', '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç']):
                    base_response += "\n\nüíª –ï—Å–ª–∏ –Ω—É–∂–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ - –≥–æ—Ç–æ–≤ —É–≥–ª—É–±–∏—Ç—å—Å—è!"
                elif any(word in message_lower for word in ['—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–∏—Å–∫—É—Å—Å—Ç–≤–æ', '–¥–∏–∑–∞–π–Ω']):
                    base_response += "\n\nüé® –î–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏–π!"
                
                return base_response
    
    async def get_status(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
        return {
            "demo_mode": self.demo_mode,
            "active_chats": len(self.chat_sessions),
            "agents": {
                "text_agent": False,
                "vision_agent": False, 
                "image_agent": False
            },
            "timestamp": datetime.now().isoformat()
        }


class TelegramChatBot:
    """Telegram —á–∞—Ç-–±–æ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤"""
    
    def __init__(self):
        self.token = "8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw"
        self.allowed_chat_id = "458589236"
        
        # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä —á–∞—Ç–∞
        self.chat_coordinator = SimpleChatCoordinator()
        
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP API
        self.api_url = f"https://api.telegram.org/bot{self.token}"
        self.last_update_id = 0
        
        # –î–ª—è python-telegram-bot
        self.bot: Optional[Bot] = None
        self.application = None
    
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram —á–∞—Ç-–±–æ—Ç–∞...")
        
        if TELEGRAM_AVAILABLE:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º python-telegram-bot
            await self._init_telegram_bot()
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP API
            await self._init_simple_bot()
        
        logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def _init_telegram_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ python-telegram-bot"""
        try:
            self.bot = Bot(token=self.token)
            self.application = Application.builder().token(self.token).build()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            self.application.add_handler(CommandHandler("start", self._cmd_start))
            self.application.add_handler(CommandHandler("help", self._cmd_help))
            self.application.add_handler(CommandHandler("status", self._cmd_status))
            self.application.add_handler(CommandHandler("generate", self._cmd_generate))
            self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self._handle_message))
            
            await self.application.initialize()
            await self.application.start()
            
            logger.info("‚úÖ Python-telegram-bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ python-telegram-bot: {e}")
            raise
    
    async def _init_simple_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP –±–æ—Ç–∞"""
        logger.info("üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP API")
    
    async def _cmd_start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        user_name = update.effective_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        welcome_text = f"""ü§ñ **AGI Layer v3.9 - –ß–∞—Ç —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏**

–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.

**üß† –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ üí¨ –£–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞–º—è—Ç—å—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
‚Ä¢ üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (/generate)
‚Ä¢ üëÅÔ∏è –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ)
‚Ä¢ üìä –ü–æ–º–æ—â—å —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏

**üöÄ –ö–æ–º–∞–Ω–¥—ã:**
/help - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
/generate [–æ–ø–∏—Å–∞–Ω–∏–µ] - –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

**–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –º–Ω–µ, –∏ —è –æ—Ç–≤–µ—á—É –∫–∞–∫ —É–º–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å!** ‚ú®"""
        
        await update.message.reply_text(welcome_text, parse_mode=ParseMode.MARKDOWN)
    
    async def _cmd_help(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        help_text = """ü§ñ **AGI Layer v3.9 - –°–ø—Ä–∞–≤–∫–∞**

**üìù –ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/start` - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
‚Ä¢ `/help` - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
‚Ä¢ `/status` - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
‚Ä¢ `/generate [–æ–ø–∏—Å–∞–Ω–∏–µ]` - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

**üí¨ –ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è:**
–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è - —è –ø–æ–Ω–∏–º–∞—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –∏ –æ—Ç–≤–µ—á–∞—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞.

**üéØ –ü—Ä–∏–º–µ—Ä—ã:**
‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫–æ—Å–º–æ—Å"
‚Ä¢ "–ü–æ–º–æ–≥–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–∞ Python"
‚Ä¢ "–ü—Ä–∏–¥—É–º–∞–π –∏–¥–µ—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞"
‚Ä¢ "/generate –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º"

**‚ö° –Ø —Ä–∞–±–æ—Ç–∞—é –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ - –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ!**"""
        
        await update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN)
    
    async def _cmd_status(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /status"""
        status = await self.chat_coordinator.get_status()
        
        status_text = f"""üìä **–°—Ç–∞—Ç—É—Å AGI Layer v3.9**

ü§ñ **–°–∏—Å—Ç–µ–º–∞:**
‚Ä¢ Chat Coordinator: üü¢ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ Telegram Bot: üü¢ –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ –†–µ–∂–∏–º: üü° –î–µ–º–æ (–±—ã—Å—Ç—Ä—ã–π)

üìà **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {status['active_chats']}
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {datetime.now().strftime('%H:%M:%S')}
‚Ä¢ –í–µ—Ä—Å–∏—è: v3.9.0

‚úÖ **–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!**"""
        
        await update.message.reply_text(status_text, parse_mode=ParseMode.MARKDOWN)
    
    async def _cmd_generate(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /generate"""
        prompt = " ".join(context.args) if context.args else ""
        
        if not prompt:
            await update.message.reply_text(
                "üé® **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**\n\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: `/generate [–æ–ø–∏—Å–∞–Ω–∏–µ]`\n\n"
                "**–ü—Ä–∏–º–µ—Ä—ã:**\n"
                "‚Ä¢ `/generate –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º`\n"
                "‚Ä¢ `/generate —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥`\n"
                "‚Ä¢ `/generate –º–∏–ª—ã–π –∫–æ—Ç–µ–Ω–æ–∫`",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        demo_text = f"""üé® **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!**

üìù **–ü—Ä–æ–º–ø—Ç:** {prompt}
ü§ñ **–ú–æ–¥–µ–ª—å:** Stable Diffusion 1.5
üìÖ **–í—Ä–µ–º—è:** {datetime.now().strftime('%H:%M:%S')}

*–í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏!*

üöÄ **–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ Docker**"""
        
        await update.message.reply_text(demo_text, parse_mode=ParseMode.MARKDOWN)
    
    async def _handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            chat_id = update.effective_chat.id
            message = update.message.text
            user_name = update.effective_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
            await context.bot.send_chat_action(chat_id=chat_id, action='typing')
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä
            response = await self.chat_coordinator.process_text_message(chat_id, message, user_name)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await update.message.reply_text(f"ü§ñ {response}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await update.message.reply_text(
                "‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥."
            )
    
    # –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ HTTP API
    async def send_message_simple(self, chat_id: str, text: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π API"""
        if not AIOHTTP_AVAILABLE:
            logger.error("aiohttp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤")
            return False
        
        try:
            async with aiohttp.ClientSession() as session:
                url = f"{self.api_url}/sendMessage"
                data = {
                    "chat_id": chat_id,
                    "text": text,
                    "parse_mode": "Markdown"
                }
                async with session.post(url, json=data) as response:
                    if response.status == 200:
                        result = await response.json()
                        return result.get('ok', False)
                    return False
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False
    
    async def get_updates_simple(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π API"""
        if not AIOHTTP_AVAILABLE:
            return []
        
        try:
            async with aiohttp.ClientSession() as session:
                url = f"{self.api_url}/getUpdates"
                params = {"offset": self.last_update_id + 1, "timeout": 10}
                async with session.get(url, params=params) as response:
                    if response.status == 200:
                        data = await response.json()
                        if data.get('ok'):
                            return data.get('result', [])
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return []
    
    async def process_update_simple(self, update):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ"""
        try:
            if 'message' not in update:
                return
            
            message = update['message']
            chat_id = str(message['chat']['id'])
            text = message.get('text', '')
            user_name = message['from'].get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name}: {text}")
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            if text == '/start':
                response = f"""ü§ñ **AGI Layer v3.9 - –ß–∞—Ç —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏**

–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.

**üß† –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ üí¨ –£–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞–º—è—Ç—å—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
‚Ä¢ üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (/generate)
‚Ä¢ üìä –ü–æ–º–æ—â—å —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏

**–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –º–Ω–µ, –∏ —è –æ—Ç–≤–µ—á—É –∫–∞–∫ —É–º–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å!** ‚ú®"""
                
            elif text == '/help':
                response = """ü§ñ **–°–ø—Ä–∞–≤–∫–∞ AGI Layer v3.9**

–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è - —è –ø–æ–Ω–∏–º–∞—é –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫!

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
/generate [–æ–ø–∏—Å–∞–Ω–∏–µ] - –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

**–ü—Ä–∏–º–µ—Ä—ã –æ–±—â–µ–Ω–∏—è:**
"–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∫–æ—Å–º–æ—Å"
"–ü–æ–º–æ–≥–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
"/generate –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç" """
                
            elif text == '/status':
                status = await self.chat_coordinator.get_status()
                response = f"""üìä **–°—Ç–∞—Ç—É—Å AGI Layer v3.9**

ü§ñ **–°–∏—Å—Ç–µ–º–∞:** üü¢ –ê–∫—Ç–∏–≤–Ω–∞
üìà **–ß–∞—Ç–æ–≤:** {status['active_chats']}
‚è∞ **–í—Ä–µ–º—è:** {datetime.now().strftime('%H:%M:%S')}

‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç!"""
                
            elif text.startswith('/generate '):
                prompt = text[10:]
                response = f"""üé® **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!**

üìù **–ü—Ä–æ–º–ø—Ç:** {prompt}
ü§ñ **–ú–æ–¥–µ–ª—å:** Stable Diffusion 1.5

*–î–µ–º–æ —Ä–µ–∂–∏–º - —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!*"""
                
            else:
                # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                response = await self.chat_coordinator.process_text_message(int(chat_id), text, user_name)
                response = f"ü§ñ {response}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            await self.send_message_simple(chat_id, response)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
    
    async def run_simple(self):
        """–ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        if self.allowed_chat_id:
            await self.send_message_simple(
                self.allowed_chat_id,
                "üöÄ **AGI Layer v3.9 –∑–∞–ø—É—â–µ–Ω!**\n\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."
            )
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while True:
            try:
                updates = await self.get_updates_simple()
                
                for update in updates:
                    self.last_update_id = update['update_id']
                    await self.process_update_simple(update)
                
                await asyncio.sleep(1)
                
            except KeyboardInterrupt:
                logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
                break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                await asyncio.sleep(5)
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            await self.initialize()
            
            if TELEGRAM_AVAILABLE:
                # –ó–∞–ø—É—Å–∫ —Å python-telegram-bot
                logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å python-telegram-bot...")
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ
                if self.allowed_chat_id:
                    try:
                        await self.bot.send_message(
                            chat_id=int(self.allowed_chat_id),
                            text="üöÄ **AGI Layer v3.9 –∑–∞–ø—É—â–µ–Ω!**\n\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.",
                            parse_mode=ParseMode.MARKDOWN
                        )
                    except Exception as e:
                        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")
                
                # –ó–∞–ø—É—Å–∫ polling
                await self.application.updater.start_polling(drop_pending_updates=True)
                await self.application.updater.idle()
                
            else:
                # –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ
                await self.run_simple()
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            raise
        finally:
            await self.cleanup()
    
    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤"""
        logger.info("üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...")
        
        if self.application:
            await self.application.stop()
            await self.application.shutdown()
        
        logger.info("‚úÖ –†–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = TelegramChatBot()
    
    try:
        await bot.run()
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    print("ü§ñ AGI Layer v3.9 - Telegram Chat Bot")
    print("=" * 40)
    print()
    
    if not TELEGRAM_AVAILABLE:
        print("‚ö†Ô∏è  python-telegram-bot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install python-telegram-bot")
        print("üîß –†–∞–±–æ—Ç–∞–µ–º –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ")
        print()
    
    if not AIOHTTP_AVAILABLE:
        print("‚ö†Ô∏è  aiohttp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω") 
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install aiohttp")
        print("üîß HTTP API –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å")
        print()
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    asyncio.run(main())