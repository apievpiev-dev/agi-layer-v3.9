#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å Telegram –±–æ—Ç–æ–º
"""

import asyncio
import aiohttp
import json

async def check_telegram_api():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram API"""
    
    TOKEN = "8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw"
    CHAT_ID = "458589236"
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê TELEGRAM –ë–û–¢–ê")
    print("=" * 40)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TOKEN}/getMe"
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        bot_info = data['result']
                        print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{bot_info['username']}")
                        print(f"   –ò–º—è: {bot_info['first_name']}")
                        print(f"   ID: {bot_info['id']}")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('description')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Chat ID
    print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Chat ID: {CHAT_ID}")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TOKEN}/getChat"
            params = {"chat_id": CHAT_ID}
            async with session.get(url, params=params) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        chat_info = data['result']
                        print(f"‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat_info.get('title', chat_info.get('first_name', 'Unknown'))}")
                        print(f"   –¢–∏–ø: {chat_info['type']}")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞: {data.get('description')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Ç–∞: {e}")
        return False
    
    # 3. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    print(f"\n3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
            data = {
                "chat_id": CHAT_ID,
                "text": "ü§ñ AGI Layer v3.9 - –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!\n\n–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
            }
            async with session.post(url, json=data) as response:
                if response.status == 200:
                    result = await response.json()
                    if result.get('ok'):
                        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                        return True
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.get('description')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

async def check_bot_updates():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞"""
    
    TOKEN = "8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw"
    
    print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞...")
    try:
        async with aiohttp.ClientSession() as session:
            url = f"https://api.telegram.org/bot{TOKEN}/getUpdates"
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    if data.get('ok'):
                        updates = data['result']
                        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                        
                        if updates:
                            print("üì• –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
                            for update in updates[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                                if 'message' in update:
                                    msg = update['message']
                                    text = msg.get('text', '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞')
                                    chat_id = msg['chat']['id']
                                    print(f"   Chat {chat_id}: {text}")
                        else:
                            print("‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                        return True
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {data.get('description')}")
                        return False
                else:
                    print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status}")
                    return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    api_ok = await check_telegram_api()
    
    if api_ok:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        await check_bot_updates()
        
        print(f"\nüéâ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        print("‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("\nüì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("   1. –ù–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É /start")
        print("   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã /status, /generate")
        print("   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É AGI Layer v3.9")
        
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –û–ë–ù–ê–†–£–ñ–ï–ù–´")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω —É @BotFather")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Chat ID")
        print("   4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç")
        print("   5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")

if __name__ == "__main__":
    asyncio.run(main())

