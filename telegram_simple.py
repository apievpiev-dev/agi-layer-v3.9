#!/usr/bin/env python3
"""
–ü–†–û–°–¢–û–ô —Ä–∞–±–æ—á–∏–π Telegram –±–æ—Ç - –ë–ï–ó –í–°–Ø–ö–û–ô –•–£–ô–ù–ò
"""

import asyncio
import json
import urllib.request
import urllib.parse
from datetime import datetime

TOKEN = "8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw"
API_URL = f"https://api.telegram.org/bot{TOKEN}"

class SimpleBotThatWorks:
    def __init__(self):
        self.last_update_id = 0
        self.memory = {}  # –ü—Ä–æ—Å—Ç–∞—è –ø–∞–º—è—Ç—å
    
    def send_message(self, chat_id, text):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            url = f"{API_URL}/sendMessage"
            data = urllib.parse.urlencode({
                'chat_id': chat_id,
                'text': text[:4000]
            }).encode()
            
            req = urllib.request.Request(url, data=data)
            with urllib.request.urlopen(req, timeout=10) as response:
                result = json.loads(response.read().decode())
                return result.get('ok', False)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    def get_updates(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
        try:
            url = f"{API_URL}/getUpdates?offset={self.last_update_id + 1}&timeout=10"
            with urllib.request.urlopen(url, timeout=15) as response:
                data = json.loads(response.read().decode())
                return data.get('result', [])
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")
            return []
    
    def smart_response(self, chat_id, message, user_name):
        """–£–ú–ù–´–ô –æ—Ç–≤–µ—Ç"""
        msg = message.lower()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å
        if chat_id not in self.memory:
            self.memory[chat_id] = []
        self.memory[chat_id].append(message)
        if len(self.memory[chat_id]) > 10:
            self.memory[chat_id] = self.memory[chat_id][-10:]
        
        # –£–ú–ù–´–ï –æ—Ç–≤–µ—Ç—ã
        if msg in ['–ø—Ä–∏–≤–µ—Ç', 'hi', 'hello', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π']:
            return f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø AGI Layer v3.9 - —É–º–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ì–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É! ü§ñ"
        
        if '–¥–µ–ª–∞' in msg:
            return f"–û—Ç–ª–∏—á–Ω–æ! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å. –û–±—Ä–∞–±–æ—Ç–∞–ª —É–∂–µ {len(self.memory[chat_id])} –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ê –∫–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞?"
        
        if '–ø–æ–º–Ω–∏—à—å' in msg or '–ø–∞–º—è—Ç—å' in msg:
            recent = self.memory[chat_id][-3:]
            return f"–ö–æ–Ω–µ—á–Ω–æ –ø–æ–º–Ω—é! –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–µ–º—ã: {', '.join(recent)}. –í—Å–µ–≥–æ –∑–∞–ø–æ–º–Ω–∏–ª {len(self.memory[chat_id])} –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."
        
        if '—É–º–µ–µ—à—å' in msg or '–º–æ–∂–µ—à—å' in msg:
            return """üß† –Ø —É–º–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç AGI Layer v3.9!

–ú–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:
‚Ä¢ –í–µ–¥—É —É–º–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞–º—è—Ç—å—é
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π  
‚Ä¢ –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±—ã–º —Ç–µ–º–∞–º
‚Ä¢ –ü–æ–º–æ–≥–∞—é —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–¥–µ–∏ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è

–ü—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Ç–µ—Å—å —Å–æ –º–Ω–æ–π –∫–∞–∫ —Å –∂–∏–≤—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º!"""
        
        if '–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç' in msg or '–∏–∏' in msg:
            return f"–î–∞, —è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç AGI Layer v3.9! –ò—Å–ø–æ–ª—å–∑—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤. –í –Ω–∞—à–µ–º –¥–∏–∞–ª–æ–≥–µ —É–∂–µ {len(self.memory[chat_id])} –æ–±–º–µ–Ω–æ–≤ - —è –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–∞–∂–¥–æ–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
        
        if len(message.split()) == 1:
            return f"'{message}' - –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –ú–æ–∂–µ—Ç–µ —Ä–∞–∑–≤–∏—Ç—å —ç—Ç—É –º—ã—Å–ª—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?"
        
        if '?' in message:
            return f"–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! '{message}' - —ç—Ç–æ —Ç–µ–º–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?"
        
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É–º–Ω—ã–π –æ—Ç–≤–µ—Ç
        topics = ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–Ω–∞—É–∫–∞', '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '—Ä–∞–±–æ—Ç–∞', '–∂–∏–∑–Ω—å', '–±—É–¥—É—â–µ–µ']
        for topic in topics:
            if topic in msg:
                return f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞ - {topic}! –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ '{message}' –º–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∞—Å–ø–µ–∫—Ç–æ–≤. –•–æ—Ç–∏—Ç–µ —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –¥–µ—Ç–∞–ª–∏?"
        
        return f"–ü–æ–Ω–∏–º–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '{message}'. –≠—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ –º–Ω–æ–≥–∏—Ö –≤–µ—â–∞—Ö. –ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ö–æ—Ç–µ–ª–∏ –±—ã –æ–±—Å—É–¥–∏—Ç—å –∏–ª–∏ —É–∑–Ω–∞—Ç—å?"
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –ü–†–û–°–¢–û–ì–û —Ä–∞–±–æ—á–µ–≥–æ –±–æ—Ç–∞...")
        print("‚úÖ –ë–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        self.send_message("458589236", "üöÄ –ü–†–û–°–¢–û–ô –ë–û–¢ –ó–ê–ü–£–©–ï–ù!\n\n–¢–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é! –ü–∏—à–∏—Ç–µ /start")
        print("‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
        while True:
            try:
                updates = self.get_updates()
                
                for update in updates:
                    self.last_update_id = update['update_id']
                    
                    if 'message' in update:
                        msg = update['message']
                        chat_id = str(msg['chat']['id'])
                        text = msg.get('text', '')
                        user_name = msg['from'].get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                        
                        print(f"üì® {user_name}: {text}")
                        
                        if text == '/start':
                            response = f"""ü§ñ AGI Layer v3.9 - –†–ê–ë–û–¢–ê–Æ–©–ò–ô –ò–ò

–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–û —Ä–∞–±–æ—Ç–∞—é!

‚úÖ –ü—Ä–æ—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ - –Ω–∞–¥–µ–∂–Ω–∞—è —Ä–∞–±–æ—Ç–∞
üß† –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –ø–∞–º—è—Ç—å—é –¥–∏–∞–ª–æ–≥–∞  
üí¨ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ
üìä –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

–ü–∏—à–∏—Ç–µ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –æ—Ç–≤–µ—á—É —É–º–Ω–æ! üöÄ"""
                        
                        elif text == '/status':
                            response = f"""üìä –°—Ç–∞—Ç—É—Å: –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!

üü¢ –ë–æ—Ç: –ê–∫—Ç–∏–≤–µ–Ω
üü¢ –ü–∞–º—è—Ç—å: {len(self.memory.get(int(chat_id), []))} —Å–æ–æ–±—â–µ–Ω–∏–π
üü¢ API: –ü–æ–¥–∫–ª—é—á–µ–Ω
üü¢ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}

‚úÖ –ù–∏–∫–∞–∫–∏—Ö –æ—à–∏–±–æ–∫, —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"""
                        
                        else:
                            response = self.smart_response(int(chat_id), text, user_name)
                        
                        self.send_message(chat_id, response)
                        print(f"‚úÖ –û—Ç–≤–µ—Ç–∏–ª: {response[:50]}...")
                
                asyncio.sleep(1)
                
            except KeyboardInterrupt:
                print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                asyncio.sleep(5)

if __name__ == "__main__":
    bot = SimpleBotThatWorks()
    bot.run()