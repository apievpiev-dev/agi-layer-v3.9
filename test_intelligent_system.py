#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã AGI Layer v3.9
"""

import asyncio
import aiohttp
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = os.getenv('TELEGRAM_TOKEN', '8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw')
CHAT_ID = os.getenv('TELEGRAM_CHAT_ID', '458589236')
API_URL = f"https://api.telegram.org/bot{TOKEN}"

async def send_test_message(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        async with aiohttp.ClientSession() as session:
            url = f"{API_URL}/sendMessage"
            data = {
                "chat_id": CHAT_ID,
                "text": text
            }
            async with session.post(url, json=data) as response:
                if response.status == 200:
                    result = await response.json()
                    if result.get('ok'):
                        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")
                        return True
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status}")
                return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_intelligent_features():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π AGI —Å–∏—Å—Ç–µ–º—ã\n")
    
    # –¢–µ—Å—Ç 1: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ
    print("1Ô∏è‚É£ –¢–µ—Å—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è...")
    
    conversation_tests = [
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ",
        "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?",
        "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?"
    ]
    
    for msg in conversation_tests:
        print(f"   –û—Ç–ø—Ä–∞–≤–ª—è—é: {msg}")
        await send_test_message(msg)
        await asyncio.sleep(3)  # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞
    
    print("‚úÖ –¢–µ—Å—Ç—ã –æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    image_tests = [
        "–ù–∞—Ä–∏—Å—É–π –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º",
        "–°–æ–∑–¥–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ—Ä–∞–±–ª—è",
        "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –∫–æ—Ç–æ–º –≤ –∫–æ—Å–º–æ—Å–µ",
        "–ü–æ–∫–∞–∂–∏ –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –±—É–¥—É—â–∏–π –≥–æ—Ä–æ–¥"
    ]
    
    for msg in image_tests:
        print(f"   –û—Ç–ø—Ä–∞–≤–ª—è—é: {msg}")
        await send_test_message(msg)
        await asyncio.sleep(5)  # –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    
    print("‚úÖ –¢–µ—Å—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # –¢–µ—Å—Ç 3: –í–æ–ø—Ä–æ—Å—ã –∏ –∞–Ω–∞–ª–∏–∑
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞...")
    
    question_tests = [
        "–ß—Ç–æ —Ç–∞–∫–æ–µ Python?",
        "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏?", 
        "–ü–æ—á–µ–º—É –Ω–µ–±–æ –≥–æ–ª—É–±–æ–µ?",
        "–ì–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?",
        "–ö–æ–≥–¥–∞ –ø–æ—è–≤–∏–ª–∏—Å—å –ø–µ—Ä–≤—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã?"
    ]
    
    for msg in question_tests:
        print(f"   –û—Ç–ø—Ä–∞–≤–ª—è—é: {msg}")
        await send_test_message(msg)
        await asyncio.sleep(2)
    
    print("‚úÖ –¢–µ—Å—Ç—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # –¢–µ—Å—Ç 4: –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –æ–±—â–µ–Ω–∏—è
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∏–ª–µ–π...")
    
    style_tests = [
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!",
        "–≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
        "–ú–æ–∂–µ—à—å –æ–±—ä—è—Å–Ω–∏—Ç—å –ø—Ä–æ—â–µ?",
        "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é",
        "–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π!"
    ]
    
    for msg in style_tests:
        print(f"   –û—Ç–ø—Ä–∞–≤–ª—è—é: {msg}")
        await send_test_message(msg)
        await asyncio.sleep(2)
    
    print("‚úÖ –¢–µ—Å—Ç—ã —Å—Ç–∏–ª–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    
    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    print("\n5Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    
    final_message = f"""üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!

**–í—Ä–µ–º—è:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

**–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚úÖ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–æ–º–∞–Ω–¥
‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚úÖ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –ò–ò
‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –æ–±—â–µ–Ω–∏—è

**–°—Ç–∞—Ç—É—Å:** –í—Å–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!

–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é! üöÄ"""
    
    await send_test_message(final_message)
    print("‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await test_intelligent_features()
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram —á–∞—Ç - –±–æ—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—á–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ")
        print("üß† –í—Å–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    asyncio.run(main())