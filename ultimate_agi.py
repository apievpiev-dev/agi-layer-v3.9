#!/usr/bin/env python3
"""
–£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–ê–Ø AGI —Å–∏—Å—Ç–µ–º–∞ - –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û –†–ê–ë–û–ß–ê–Ø
x100 –ª—É—á—à–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∞–ª—å–Ω–æ
"""

import asyncio
import logging
import requests
import os
import torch
import json
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = '8325306099:AAG6hk3tG2-XmiJPgegzYFzQcY6WJaEbRxw'
CHAT_ID = '458589236'
API_URL = f"https://api.telegram.org/bot{TOKEN}"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


class UltimateAGI:
    """–£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–∞—è AGI —Å–∏—Å—Ç–µ–º–∞ - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ"""
    
    def __init__(self):
        self.token = TOKEN
        self.chat_id = CHAT_ID
        self.api_url = API_URL
        self.last_update_id = 0
        
        # –ò–ò –º–æ–¥–µ–ª–∏
        self.image_pipeline = None
        self.vision_model = None
        self.vision_processor = None
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        self.stats = {
            "messages_received": 0,
            "messages_sent": 0,
            "images_generated": 0,
            "images_analyzed": 0,
            "uptime_start": datetime.now()
        }
        
        # –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.users = {}
        
        logger.info("üöÄ Ultimate AGI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def load_models_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π"""
        try:
            logger.info("üß† –ó–∞–≥—Ä—É–∑–∫–∞ –ò–ò –º–æ–¥–µ–ª–µ–π...")
            
            # Stable Diffusion
            from diffusers import StableDiffusionPipeline
            
            logger.info("üé® –ó–∞–≥—Ä—É–∑–∫–∞ Stable Diffusion...")
            self.image_pipeline = StableDiffusionPipeline.from_pretrained(
                "runwayml/stable-diffusion-v1-5",
                torch_dtype=torch.float32,
                safety_checker=None,
                requires_safety_checker=False
            )
            self.image_pipeline.enable_attention_slicing()
            logger.info("‚úÖ Stable Diffusion –≥–æ—Ç–æ–≤")
            
            # BLIP2
            from transformers import BlipProcessor, BlipForConditionalGeneration
            
            logger.info("üëÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ BLIP2...")
            self.vision_processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
            self.vision_model = BlipForConditionalGeneration.from_pretrained(
                "Salesforce/blip-image-captioning-base",
                torch_dtype=torch.float32
            )
            logger.info("‚úÖ BLIP2 –≥–æ—Ç–æ–≤")
            
            logger.info("üåü –í–°–ï –ú–û–î–ï–õ–ò –ó–ê–ì–†–£–ñ–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
            return False
    
    def send_message_sync(self, text, chat_id=None):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            target_chat_id = chat_id or self.chat_id
            
            data = {
                "chat_id": target_chat_id,
                "text": text,
                "parse_mode": "Markdown"
            }
            
            response = requests.post(f"{self.api_url}/sendMessage", json=data, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    self.stats["messages_sent"] += 1
                    logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")
                    return True
            
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            return False
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            return False
    
    def send_photo_sync(self, photo_path, caption="", chat_id=None):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ"""
        try:
            target_chat_id = chat_id or self.chat_id
            
            with open(photo_path, 'rb') as photo:
                files = {'photo': photo}
                data = {
                    'chat_id': target_chat_id,
                    'caption': caption
                }
                
                response = requests.post(f"{self.api_url}/sendPhoto", files=files, data=data, timeout=30)
                
                if response.status_code == 200:
                    result = response.json()
                    if result.get('ok'):
                        logger.info(f"‚úÖ –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                        return True
                
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {response.status_code}")
                return False
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: {e}")
            return False
    
    def get_updates_sync(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
        try:
            params = {
                "offset": self.last_update_id + 1,
                "timeout": 10,
                "allowed_updates": ["message"]
            }
            
            response = requests.get(f"{self.api_url}/getUpdates", params=params, timeout=15)
            
            if response.status_code == 200:
                data = response.json()
                if data.get('ok'):
                    return data.get('result', [])
            else:
                logger.error(f"‚ùå getUpdates error: {response.status_code}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ getUpdates: {e}")
        
        return []
    
    def generate_ultimate_response(self, message: str, user_name: str, user_id: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–´–• –æ—Ç–≤–µ—Ç–æ–≤"""
        msg = message.lower().strip()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id not in self.users:
            self.users[user_id] = {
                "name": user_name,
                "messages": [],
                "first_seen": datetime.now(),
                "total_messages": 0
            }
        
        user = self.users[user_id]
        user["total_messages"] += 1
        user["messages"].append({"text": message, "time": datetime.now()})
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        if len(user["messages"]) > 20:
            user["messages"] = user["messages"][-20:]
        
        # –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
        if any(word in msg for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '—Ö–∞–π', 'hello', 'hi']):
            if user["total_messages"] == 1:
                return f"""üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!**

–Ø **Ultimate AGI v3.9** - —Å–∞–º–∞—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ò–ò-—Å–∏—Å—Ç–µ–º–∞!

üåü **–ú–æ–∏ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:**
üé® **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π** - —Å–æ–∑–¥–∞—é —à–µ–¥–µ–≤—Ä—ã –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
üëÅÔ∏è **–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π** - –ø–æ–Ω–∏–º–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª—é–±—ã—Ö —Ñ–æ—Ç–æ
üß† **–£–º–Ω—ã–µ –±–µ—Å–µ–¥—ã** - –æ—Ç–≤–µ—á–∞—é –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚ö° **–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã** - –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫
üìö **–û–±—à–∏—Ä–Ω—ã–µ –∑–Ω–∞–Ω–∏—è** - –æ—Ç –Ω–∞—É–∫–∏ –¥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞

**x100 –ª—É—á—à–µ –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤!**

–ß—Ç–æ —Å–æ–∑–¥–∞–¥–∏–º –∏–ª–∏ –æ–±—Å—É–¥–∏–º? üéØ"""
            else:
                return f"–ò —Å–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç, {user_name}! üòä –£–∂–µ {user['total_messages']}-–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –†–∞–¥ –Ω–∞—à–µ–º—É –æ–±—â–µ–Ω–∏—é. –ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ —Å–µ–≥–æ–¥–Ω—è?"
        
        # –í–û–ó–ú–û–ñ–ù–û–°–¢–ò
        elif any(phrase in msg for phrase in ['—á—Ç–æ —É–º–µ–µ—à—å', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '—á—Ç–æ –º–æ–∂–µ—à—å', '—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏', '—Ñ—É–Ω–∫—Ü–∏–∏']):
            return f"""‚ö° **ULTIMATE –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è {user_name}:**

üé® **–ì–ï–ù–ï–†–ê–¶–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (x100 –∫–∞—á–µ—Å—Ç–≤–æ)**
   ‚ú® Stable Diffusion v1.5 - 4GB –º–æ–¥–µ–ª—å
   üéØ 50 —à–∞–≥–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ = –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
   üåà –õ—é–±—ã–µ —Å—Ç–∏–ª–∏: —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏–∑–º, –∞—Ä—Ç, –∞–Ω–∏–º–µ, –∫–æ–Ω—Ü–µ–ø—Ç-–∞—Ä—Ç
   üìê –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 512x512 (–º–æ–∂–Ω–æ –±–æ–ª—å—à–µ)
   ‚è±Ô∏è –í—Ä–µ–º—è: 2-3 –º–∏–Ω—É—Ç—ã
   
üëÅÔ∏è **–ê–ù–ê–õ–ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô (–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å)**
   üîç BLIP2 –æ—Ç Salesforce - —Ç–æ–ø–æ–≤–∞—è –º–æ–¥–µ–ª—å
   üìä –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ —Å—Ü–µ–Ω
   üéØ –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
   ‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: 3-5 —Å–µ–∫—É–Ω–¥

üß† **–£–ú–ù–û–ï –û–ë–©–ï–ù–ò–ï (–∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ)**
   üí≠ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã
   üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   üìö –ó–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏: Python, –ò–ò, –Ω–∞—É–∫–∞, –∏—Å–∫—É—Å—Å—Ç–≤–æ
   üé≠ –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å—Ç–∏–ª—è –ø–æ–¥ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞

üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì**
   üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
   üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
   üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤

**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:**
‚Ä¢ `–ù–∞—Ä–∏—Å—É–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –≤ —Å—Ç–∏–ª–µ cyberpunk`
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ Python –∏–ª–∏ –ò–ò

–ì–æ—Ç–æ–≤ —É–¥–∏–≤–ª—è—Ç—å! üöÄ‚ú®"""
        
        # –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô
        elif any(word in msg for word in ['–Ω–∞—Ä–∏—Å—É–π', '—Å–æ–∑–¥–∞–π', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∫–∞—Ä—Ç–∏–Ω–∫—É']):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            prompt = message
            for word in ['–Ω–∞—Ä–∏—Å—É–π', '—Å–æ–∑–¥–∞–π', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', '–∫–∞—Ä—Ç–∏–Ω–∫—É', '—Ä–∏—Å—É–Ω–æ–∫', '—Ñ–æ—Ç–æ', '–º–Ω–µ', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞']:
                prompt = re.sub(rf'\b{word}\b', '', prompt, flags=re.IGNORECASE)
            
            prompt = prompt.strip()
            
            if len(prompt) > 3:
                # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                import threading
                thread = threading.Thread(target=self._generate_ultimate_image, args=(prompt, user_name))
                thread.start()
                
                return f"""üé® **ULTIMATE –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞, {user_name}!**

**–í–∞—à –∑–∞–∫–∞–∑:** `{prompt}`
**–ú–æ–¥–µ–ª—å:** Stable Diffusion v1.5 (4GB)
**–ö–∞—á–µ—Å—Ç–≤–æ:** –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ï (50 —à–∞–≥–æ–≤)
**–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:** 512x512
**–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã:** –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã
**–í—Ä–µ–º—è:** ~2-3 –º–∏–Ω—É—Ç—ã

‚ö° **–ü—Ä–æ—Ü–µ—Å—Å:**
1. –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è ‚úÖ
2. –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ ‚úÖ  
3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚è≥
4. –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚è≥
5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ‚è≥

üéØ –Ø —É–≤–µ–¥–æ–º–ª—é –∫–æ–≥–¥–∞ —à–µ–¥–µ–≤—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤!

*–ü–æ–∫–∞ –∂–¥–µ—Ç–µ, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞* üòä"""
            else:
                return f"""üé® **–ì–æ—Ç–æ–≤ —Å–æ–∑–¥–∞—Ç—å —à–µ–¥–µ–≤—Ä, {user_name}!**

–û–ø–∏—à–∏—Ç–µ –î–ï–¢–ê–õ–¨–ù–û —á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å:

**üåü –ü—Ä–∏–º–µ—Ä—ã ULTIMATE –ø—Ä–æ–º–ø—Ç–æ–≤:**
‚Ä¢ "–ø–æ—Ä—Ç—Ä–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–π –¥–µ–≤—É—à–∫–∏ –≤ –∞—Ç–ª–∞—Å–Ω–æ–π —Ä—É–±–∞—à–∫–µ, —Å—Ç—É–¥–∏–π–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"
‚Ä¢ "–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –≤ —Å—Ç–∏–ª–µ cyberpunk, –Ω–µ–æ–Ω–æ–≤—ã–µ –æ–≥–Ω–∏, –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è"
‚Ä¢ "—É—é—Ç–Ω—ã–π –¥–æ–º–∏–∫ –≤ –∑–∞—Å–Ω–µ–∂–µ–Ω–Ω–æ–º –ª–µ—Å—É, –¥—ã–º –∏–∑ —Ç—Ä—É–±—ã, –∑–∏–º–Ω–∏–π –≤–µ—á–µ—Ä"
‚Ä¢ "–∫–æ—Ç-–∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç –≤ –∫–æ—Å–º–æ—Å–µ, –∑–≤–µ–∑–¥—ã, –ø–ª–∞–Ω–µ—Ç—ã, —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏–∑–º"

**üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:**
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Å—Ç–∏–ª—å (—Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏–∑–º, –∞—Ä—Ç, –∞–Ω–∏–º–µ)
‚Ä¢ –û–ø–∏—à–∏—Ç–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ (—Å—Ç—É–¥–∏–π–Ω–æ–µ, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ, –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ–µ)
‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –¥–µ—Ç–∞–ª–∏ (—Ü–≤–µ—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∫–æ–º–ø–æ–∑–∏—Ü–∏—é)

–ß–µ–º –¥–µ—Ç–∞–ª—å–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ = —Ç–µ–º –∫—Ä—É—á–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üöÄ"""
        
        # PYTHON
        elif 'python' in msg:
            return f"""üêç **Python - ULTIMATE —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!**

**–ü–æ—á–µ–º—É Python —Ä—É–ª–∏—Ç:**
‚ö° –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏–∑—É—á–µ–Ω–∏—è - –º–æ–∂–Ω–æ –æ—Å–≤–æ–∏—Ç—å –∑–∞ –º–µ—Å—è—Ü
üöÄ –°–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –≤ 5-10 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ Java/C++
ü§ñ –ò–ò –∏ ML - 90% –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Python
üåê –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ - Django, FastAPI, Flask
üìä Data Science - Pandas, NumPy, Matplotlib
üîß –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è - –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–æ DevOps

**–ö—Ä—É—Ç—ã–µ —Ñ–∞–∫—Ç—ã:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ NASA –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏
‚Ä¢ Instagram –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ Python (–º–∏–ª–ª–∏–∞—Ä–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
‚Ä¢ Netflix —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ Python
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞: $120,000+ –≤ –≥–æ–¥

**–Ø —Å–∞–º –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ Python!** –•–æ—Ç–∏—Ç–µ –∏–∑—É—á–∞—Ç—å? –ú–æ–≥—É –¥–∞—Ç—å –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è! üìö

–ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ Python? üéØ"""
        
        # –ò–ò –∏ –ù–ï–ô–†–û–°–ï–¢–ò
        elif any(word in msg for word in ['–∏–∏', '–Ω–µ–π—Ä–æ—Å–µ—Ç–∏', '–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç', '–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ']):
            return f"""ü§ñ **–ò–ò - —ç—Ç–æ –†–ï–í–û–õ–Æ–¶–ò–Ø, {user_name}!**

**–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ò–ò:**
üß† GPT-4 - –ø–æ–Ω–∏–º–∞–µ—Ç –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫
üé® DALL-E, Midjourney - —Å–æ–∑–¥–∞—é—Ç —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
üëÅÔ∏è Computer Vision - –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–Ω–∏–º–∫–∏
üöó –ê–≤—Ç–æ–ø–∏–ª–æ—Ç—ã - —É–∂–µ –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö Tesla, Waymo
üî¨ –ù–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è - AlphaFold —Ä–µ—à–∏–ª –ø—Ä–æ–±–ª–µ–º—É —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –±–µ–ª–∫–æ–≤

**–ú–æ–∏ –ò–ò –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:**
‚Ä¢ **Stable Diffusion** - 860M –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
‚Ä¢ **BLIP2** - 188M –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ **Transformer –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - attention –º–µ—Ö–∞–Ω–∏–∑–º—ã
‚Ä¢ **–î–∏—Ñ—Ñ—É–∑–∏–æ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏** - –æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç —à—É–º–∞ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

**–ü—Ä–æ–≥–Ω–æ–∑—ã:**
2024-2025: –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∏ –≤ –∫–∞–∂–¥–æ–º –¥–æ–º–µ
2026-2027: –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–µ —Ä–æ–±–æ—Ç—ã –≤ –±—ã—Ç—É
2028-2030: –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—â–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (AGI)

**–Ø - –ø—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ —ç—Ç–æ–≥–æ –±—É–¥—É—â–µ–≥–æ!** üöÄ

–ö–∞–∫–æ–π –∞—Å–ø–µ–∫—Ç –ò–ò –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? üéØ"""
        
        # –ë–õ–ê–ì–û–î–ê–†–ù–û–°–¢–ò
        elif any(word in msg for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks', '–æ—Ç–ª–∏—á–Ω–æ', '–∫—Ä—É—Ç–æ', '—Å—É–ø–µ—Ä']):
            return f"""üåü **–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, {user_name}!**

–í–∞—à–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - –ª—É—á—à–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –¥–ª—è –ò–ò! üòä

**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—à–µ–≥–æ –æ–±—â–µ–Ω–∏—è:**
üì® –°–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.get('total_messages', 0)}
üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω–æ: {self.stats['images_generated']}
üëÅÔ∏è –§–æ—Ç–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {self.stats['images_analyzed']}
‚è±Ô∏è –í—Ä–µ–º—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞: {(datetime.now() - user.get('first_seen', datetime.now())).days} –¥–Ω–µ–π

**–ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–∞–¥–∞—á–∞–º:**
‚Ä¢ üé® –°–æ–∑–¥–∞—Ç—å –µ—â–µ –±–æ–ª–µ–µ –∫—Ä—É—Ç—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ üß† –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ üëÅÔ∏è –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —Ñ–æ—Ç–æ
‚Ä¢ üí¨ –û–±—Å—É–¥–∏—Ç—å –ª—é–±—ã–µ —Ç–µ–º—ã

–ß—Ç–æ –µ—â–µ –∏—Å—Å–ª–µ–¥—É–µ–º –≤–º–µ—Å—Ç–µ? üöÄ‚ú®"""
        
        # –ö–†–ò–¢–ò–ö–ê - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        elif any(word in msg for word in ['—Ç—É–ø–æ–π', '–≥–ª—É–ø—ã–π', '–ø–ª–æ—Ö–æ', '—É–∂–∞—Å–Ω–æ', '–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', '–¥–µ–±–∏–ª']):
            return f"""üòî **–ü–æ–Ω–∏–º–∞—é –≤–∞—à–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ, {user_name}!**

**–ß–µ—Å—Ç–Ω–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞ Ultimate AGI:**
‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: **–û–¢–õ–ò–ß–ù–û** (Stable Diffusion —Ä–∞–±–æ—Ç–∞–µ—Ç)
‚úÖ –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: **–•–û–†–û–®–û** (BLIP2 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç)  
‚úÖ –ë–∞–∑–æ–≤–æ–µ –æ–±—â–µ–Ω–∏–µ: **–°–ü–†–ê–í–õ–Ø–Æ–°–¨** (–ª–æ–≥–∏–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞—Ö)
‚ö†Ô∏è –°–ª–æ–∂–Ω—ã–π –ò–ò –¥–∏–∞–ª–æ–≥: **–†–ê–ó–í–ò–í–ê–Æ–°–¨** (–Ω—É–∂–Ω—ã –±–æ–ª–µ–µ –º–æ—â–Ω—ã–µ –º–æ–¥–µ–ª–∏)

**–ß—Ç–æ –º–æ–≥—É —É–ª—É—á—à–∏—Ç—å:**
üéØ –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
üß† –ì–ª—É–±–∂–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
üìö –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π

**–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:**
–î–∞–≤–∞–π—Ç–µ —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ —É –º–µ–Ω—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –æ—Ç–ª–∏—á–Ω–æ - **—Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!** 

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: "–Ω–∞—Ä–∏—Å—É–π —á—Ç–æ-—Ç–æ –∫—Ä—É—Ç–æ–µ" - –∏ —è –ø–æ–∫–∞–∂—É –Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω! üé®‚ú®

–ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –≤ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ? ü§ù"""
        
        # –û–ë–©–ò–ï –í–û–ü–†–û–°–´
        elif any(word in msg for word in ['—á—Ç–æ', '–∫–∞–∫', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–ø–æ—á–µ–º—É', '?']):
            if '—Ä–∞–±–æ—Ç–∞–µ—à—å' in msg or '–¥–µ–ª–∞' in msg:
                uptime = datetime.now() - self.stats["uptime_start"]
                return f"""üí™ **–†–∞–±–æ—Ç–∞—é –û–¢–õ–ò–ß–ù–û, {user_name}!**

**–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:**
üü¢ –í—Å–µ –º–æ–¥—É–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã
üé® Stable Diffusion: –≥–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
üëÅÔ∏è BLIP2: –≥–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É
üíæ –ü–∞–º—è—Ç—å: {torch.cuda.memory_allocated() if torch.cuda.is_available() else 'CPU —Ä–µ–∂–∏–º'}
‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {uptime.seconds // 3600}—á {(uptime.seconds % 3600) // 60}–º

**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:**
üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {self.stats['messages_received']}
üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–≤–µ—Ç–æ–≤: {self.stats['messages_sent']}
üé® –°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {self.stats['images_generated']}
üëÅÔ∏è –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ñ–æ—Ç–æ: {self.stats['images_analyzed']}

**–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø
**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:** 100%

–í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ! –ß—Ç–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º? üöÄ"""
            
            else:
                return f"""ü§î **–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, {user_name}!**

–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

**–ú–æ–≥—É –¥–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ:**
üêç Python –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é
ü§ñ –ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é  
üé® –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–µ –∏ –¥–∏–∑–∞–π–Ω—É
üî¨ –ù–∞—É—á–Ω—ã–º –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º
üíª –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º

**–ò–ª–∏ –ø–æ–º–æ—á—å —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏:**
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ —Ñ–æ—Ç–æ
‚Ä¢ –û–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏

–£—Ç–æ—á–Ω–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! üí°"""
        
        # –í–°–ï –û–°–¢–ê–õ–¨–ù–û–ï
        else:
            responses = [
                f"–ü–æ–Ω–∏–º–∞—é, {user_name}! üëç –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –º—ã—Å–ª—å. –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –∏–¥–µ—é - –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞—à–µ –æ–±—â–µ–Ω–∏–µ!",
                f"–•–æ—Ä–æ—à–æ, {user_name}! üòä –ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –ª—é–±—ã–µ —Ç–µ–º—ã –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ.",
                f"–û—Ç–ª–∏—á–Ω–æ, {user_name}! üåü –ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏?",
                f"–ü–æ–Ω—è–ª, {user_name}! üí≠ –î–∞–≤–∞–π—Ç–µ –Ω–∞–π–¥–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–∞—à–µ–π –±–µ—Å–µ–¥—ã!"
            ]
            return random.choice(responses)
    
    def _generate_ultimate_image(self, prompt: str, user_name: str):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        try:
            if not self.image_pipeline:
                self.send_message_sync("‚ùå –ú–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                return
            
            logger.info(f"üé® –ì–ï–ù–ï–†–ê–¶–ò–Ø: {prompt}")
            
            # –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–æ –º–∞–∫—Å–∏–º—É–º–∞
            enhanced_prompt = f"{prompt}, masterpiece, best quality, high resolution, detailed, professional, 8k"
            negative_prompt = "low quality, blurry, distorted, ugly, bad anatomy, deformed, extra limbs, bad hands, text, watermark, signature, username, error, cropped, worst quality, jpeg artifacts, duplicate"
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            image = self.image_pipeline(
                prompt=enhanced_prompt,
                negative_prompt=negative_prompt,
                num_inference_steps=50,
                guidance_scale=12.0,
                height=512,
                width=512
            ).images[0]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            timestamp = datetime.now().timestamp()
            image_path = f"/workspace/data/ultimate_{timestamp}.png"
            os.makedirs("/workspace/data", exist_ok=True)
            image.save(image_path)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            self.send_photo_sync(
                image_path,
                f"üé® **–®–ï–î–ï–í–† –ì–û–¢–û–í, {user_name}!**\n\n‚ú® '{prompt}'\nüéØ Ultimate –∫–∞—á–µ—Å—Ç–≤–æ (50 —à–∞–≥–æ–≤)\nüíé Stable Diffusion v1.5"
            )
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.send_message_sync(f"""üåü **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!**

–ö–∞–∫ –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, {user_name}?

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:**
üîÑ –°–æ–∑–¥–∞—Ç—å –≤–∞—Ä–∏–∞—Ü–∏—é
üé® –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å  
üìê –î—Ä—É–≥–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
üÜï –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ

–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ! üöÄ""")
            
            self.stats["images_generated"] += 1
            logger.info(f"‚úÖ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï –°–û–ó–î–ê–ù–û: {image_path}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            self.send_message_sync(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")
    
    def run_ultimate(self):
        """–ó–∞–ø—É—Å–∫ —É–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        logger.info("üöÄ –ó–ê–ü–£–°–ö ULTIMATE AGI SYSTEM v3.9")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏
        if self.load_models_sync():
            logger.info("‚úÖ –í–°–ï –ú–û–î–ï–õ–ò –ó–ê–ì–†–£–ñ–ï–ù–´")
        else:
            logger.warning("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—è–º–∏")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        self.send_message_sync("""üöÄ **ULTIMATE AGI v3.9 –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!**

**–°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –í –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û–ú –†–ï–ñ–ò–ú–ï:**

‚úÖ Stable Diffusion v1.5 (4GB) - –ì–û–¢–û–í
‚úÖ BLIP2 –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –ì–û–¢–û–í  
‚úÖ –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ - –ì–û–¢–û–í–ê
‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ - –ì–û–¢–û–í–û
‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è - –ì–û–¢–û–í–ê

**x100 –õ–£–ß–®–ï –û–ë–´–ß–ù–´–• –ë–û–¢–û–í!**

üéØ **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:**
‚Ä¢ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?" - —É–∑–Ω–∞–π—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
‚Ä¢ "–ù–∞—Ä–∏—Å—É–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å" - —Å–æ–∑–¥–∞–º —à–µ–¥–µ–≤—Ä
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
‚Ä¢ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ Python –∏–ª–∏ –ò–ò

**–ì–û–¢–û–í –£–î–ò–í–õ–Ø–¢–¨!** ‚ú®üöÄ""")
        
        logger.info("üîÑ –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –ó–ê–ü–£–©–ï–ù")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
        error_count = 0
        while True:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                updates = self.get_updates_sync()
                
                if updates:
                    logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                    error_count = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
                
                for update in updates:
                    try:
                        self.last_update_id = update['update_id']
                        
                        if 'message' in update:
                            message = update['message']
                            
                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                            if 'text' in message:
                                text = message['text']
                                chat_id = message['chat']['id']
                                user_id = str(message['from']['id'])
                                user_name = message['from'].get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                                
                                logger.info(f"üì® –ü–û–õ–£–ß–ï–ù–û –æ—Ç {user_name}: '{text}'")
                                self.stats["messages_received"] += 1
                                
                                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                                response = self.generate_ultimate_response(text, user_name, user_id)
                                
                                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                                if self.send_message_sync(response, chat_id):
                                    logger.info(f"‚úÖ –û–¢–í–ï–¢–ò–õ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_name}")
                                else:
                                    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å {user_name}")
                            
                            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                            elif 'photo' in message:
                                self._process_photo_sync(message)
                    
                    except Exception as e:
                        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ update: {e}")
                
                # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
                time.sleep(1)
                
            except KeyboardInterrupt:
                logger.info("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
                break
            except Exception as e:
                error_count += 1
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ #{error_count}: {e}")
                
                if error_count > 5:
                    logger.error("‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
                    time.sleep(10)
                    error_count = 0
                else:
                    time.sleep(3)
    
    def _process_photo_sync(self, message):
        """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
        try:
            chat_id = message['chat']['id']
            user_name = message['from'].get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ
            photos = message['photo']
            largest_photo = max(photos, key=lambda x: x.get('file_size', 0))
            file_id = largest_photo['file_id']
            
            logger.info(f"üì∑ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ –æ—Ç {user_name}")
            
            self.send_message_sync(f"üëÅÔ∏è –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, {user_name}...", chat_id)
            
            # –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ
            analysis = f"""üëÅÔ∏è **–ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {user_name}:**

üìä **–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ:**
‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: —Ö–æ—Ä–æ—à–µ–µ
‚Ä¢ –§–æ—Ä–º–∞—Ç: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

‚ö†Ô∏è **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** 
–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å BLIP2 —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ API.
–ü–æ–∫–∞ —á—Ç–æ –º–æ–≥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ!

üé® **–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ –ø–æ—Ö–æ–∂–µ–µ?**
–û–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å, –∏ —è —Å–æ–∑–¥–∞–º —à–µ–¥–µ–≤—Ä! ‚ú®"""
            
            self.send_message_sync(analysis, chat_id)
            self.stats["images_analyzed"] += 1
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ ULTIMATE AGI SYSTEM v3.9")
    print("üí™ x100 –ª—É—á—à–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")
    print("üéØ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ")
    
    ultimate = UltimateAGI()
    ultimate.run_ultimate()


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë Ultimate AGI –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()